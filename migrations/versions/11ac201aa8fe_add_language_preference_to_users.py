"""add_language_preference_to_users

Revision ID: 11ac201aa8fe
Revises: 8e06b6c5805d
Create Date: 2025-10-22 21:37:05.257711

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '11ac201aa8fe'
down_revision: Union[str, Sequence[str], None] = '8e06b6c5805d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema - SAFELY ADD MISSING COLUMNS ONLY"""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # SAFELY add columns to users table with proper defaults
    op.add_column('users', sa.Column('language_preference', sa.String(), server_default='en', nullable=True))
    op.add_column('users', sa.Column('email_verified', sa.Boolean(), server_default='true', nullable=True))
    op.add_column('users', sa.Column('phone_verified', sa.Boolean(), server_default='false', nullable=True))
    op.add_column('users', sa.Column('last_password_change', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('two_factor_enabled', sa.Boolean(), server_default='false', nullable=True))
    op.add_column('users', sa.Column('security_questions', sa.JSON(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    
    # Update existing data
    op.execute("UPDATE users SET language_preference = 'en' WHERE language_preference IS NULL")
    op.execute("UPDATE users SET email_verified = true WHERE is_verified = true")
    op.execute("UPDATE users SET email_verified = false WHERE email_verified IS NULL")
    op.execute("UPDATE users SET phone_verified = false WHERE phone_verified IS NULL")
    op.execute("UPDATE users SET two_factor_enabled = false WHERE two_factor_enabled IS NULL")
    
    # Create index for better performance
    op.create_index(op.f('ix_users_language_preference'), 'users', ['language_preference'], unique=False)
    
    # Card table modifications (keep existing data)
    op.alter_column('cards', 'card_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    
    # Make marqeta_card_token unique constraint instead of index
    op.drop_index(op.f('ix_cards_marqeta_card_token'), table_name='cards')
    op.create_unique_constraint('uq_cards_marqeta_card_token', 'cards', ['marqeta_card_token'])
    
    # Safely remove provider column if it exists
    try:
        op.drop_column('cards', 'provider')
    except Exception:
        # Column might not exist, which is fine
        pass
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema - SAFELY REMOVE ONLY THE NEW COLUMNS"""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop index first
    op.drop_index(op.f('ix_users_language_preference'), table_name='users')
    
    # Remove new columns from users table
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'security_questions')
    op.drop_column('users', 'two_factor_enabled')
    op.drop_column('users', 'last_password_change')
    op.drop_column('users', 'phone_verified')
    op.drop_column('users', 'email_verified')
    op.drop_column('users', 'language_preference')
    
    # Restore card table changes
    try:
        op.add_column('cards', sa.Column('provider', sa.VARCHAR(), server_default=sa.text("'marqeta'::character varying"), autoincrement=False, nullable=True))
    except Exception:
        pass
    
    op.drop_constraint('uq_cards_marqeta_card_token', 'cards', type_='unique')
    op.create_index(op.f('ix_cards_marqeta_card_token'), 'cards', ['marqeta_card_token'], unique=True)
    op.alter_column('cards', 'card_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
    
    # ### end Alembic commands ###