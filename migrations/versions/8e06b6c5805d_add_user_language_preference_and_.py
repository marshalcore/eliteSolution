"""add_user_language_preference_and_trading_tables

Revision ID: 8e06b6c5805d
Revises: cd7a4ebded16
Create Date: 2025-10-22 17:20:02.776213

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8e06b6c5805d'
down_revision: Union[str, Sequence[str], None] = 'cd7a4ebded16'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema - FIXED ORDER OF OPERATIONS"""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. FIRST: Add new columns to users table
    op.add_column('users', sa.Column('language_preference', sa.String(), server_default='en', nullable=True))
    op.add_column('users', sa.Column('email_verified', sa.Boolean(), server_default='true', nullable=True))
    op.add_column('users', sa.Column('phone_verified', sa.Boolean(), server_default='false', nullable=True))
    op.add_column('users', sa.Column('last_password_change', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('two_factor_enabled', sa.Boolean(), server_default='false', nullable=True))
    op.add_column('users', sa.Column('security_questions', sa.JSON(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('temp_new_email', sa.String(), nullable=True))
    op.add_column('users', sa.Column('temp_new_phone', sa.String(), nullable=True))
    
    # 2. Add new columns to trading_bots table
    op.add_column('trading_bots', sa.Column('currency_pair', sa.String(), server_default='BTC-USDT', nullable=True))
    op.add_column('trading_bots', sa.Column('leverage', sa.Integer(), server_default='1', nullable=True))
    op.add_column('trading_bots', sa.Column('initial_amount', sa.Float(), nullable=True))
    op.add_column('trading_bots', sa.Column('current_balance', sa.Float(), server_default='0.0', nullable=True))
    op.add_column('trading_bots', sa.Column('profit_loss', sa.Float(), server_default='0.0', nullable=True))
    op.add_column('trading_bots', sa.Column('profit_loss_percentage', sa.Float(), server_default='0.0', nullable=True))
    
    # 3. Add new columns to trades table
    op.add_column('trades', sa.Column('type', sa.String(), server_default='buy', nullable=True))
    op.add_column('trades', sa.Column('price', sa.Float(), nullable=True))
    op.add_column('trades', sa.Column('currency_pair', sa.String(), server_default='BTC-USDT', nullable=True))
    op.add_column('trades', sa.Column('amount', sa.Float(), nullable=True))  # ADD THIS COLUMN FIRST
    op.add_column('trades', sa.Column('profit_loss', sa.Float(), default=0.0, nullable=True))
    op.add_column('trades', sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    
    # 4. NOW: Update existing data with the new columns
    # Update trading_bots data
    op.execute("UPDATE trading_bots SET initial_amount = amount_cents / 100.0 WHERE amount_cents IS NOT NULL")
    op.execute("UPDATE trading_bots SET current_balance = current_profit_cents / 100.0 WHERE current_profit_cents IS NOT NULL")
    op.execute("UPDATE trading_bots SET profit_loss = total_profit_cents / 100.0 WHERE total_profit_cents IS NOT NULL")
    
    # Update trades data
    op.execute("UPDATE trades SET amount = amount_cents / 100.0 WHERE amount_cents IS NOT NULL")
    op.execute("UPDATE trades SET profit_loss = profit_cents / 100.0 WHERE profit_cents IS NOT NULL")
    
    # Update users data
    op.execute("UPDATE users SET email_verified = true WHERE is_verified = true")
    op.execute("UPDATE users SET language_preference = 'en' WHERE language_preference IS NULL")
    
    # 5. Create indexes for better performance
    op.create_index(op.f('ix_users_language_preference'), 'users', ['language_preference'], unique=False)
    op.create_index(op.f('ix_trading_bots_currency_pair'), 'trading_bots', ['currency_pair'], unique=False)
    op.create_index(op.f('ix_trades_currency_pair'), 'trades', ['currency_pair'], unique=False)
    op.create_index(op.f('ix_trades_timestamp'), 'trades', ['timestamp'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema - SAFELY REMOVE ONLY THE NEW FIELDS"""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop indexes first
    op.drop_index(op.f('ix_trades_timestamp'), table_name='trades')
    op.drop_index(op.f('ix_trades_currency_pair'), table_name='trades')
    op.drop_index(op.f('ix_trading_bots_currency_pair'), table_name='trading_bots')
    op.drop_index(op.f('ix_users_language_preference'), table_name='users')
    
    # Remove new columns from trades table
    op.drop_column('trades', 'timestamp')
    op.drop_column('trades', 'profit_loss')
    op.drop_column('trades', 'amount')
    op.drop_column('trades', 'currency_pair')
    op.drop_column('trades', 'price')
    op.drop_column('trades', 'type')
    
    # Remove new columns from trading_bots table
    op.drop_column('trading_bots', 'profit_loss_percentage')
    op.drop_column('trading_bots', 'profit_loss')
    op.drop_column('trading_bots', 'current_balance')
    op.drop_column('trading_bots', 'initial_amount')
    op.drop_column('trading_bots', 'leverage')
    op.drop_column('trading_bots', 'currency_pair')
    
    # Remove new columns from users table
    op.drop_column('users', 'temp_new_phone')
    op.drop_column('users', 'temp_new_email')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'security_questions')
    op.drop_column('users', 'two_factor_enabled')
    op.drop_column('users', 'last_password_change')
    op.drop_column('users', 'phone_verified')
    op.drop_column('users', 'email_verified')
    op.drop_column('users', 'language_preference')
    
    # ### end Alembic commands ###